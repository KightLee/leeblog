<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lx.leeblog.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.lx.leeblog.pojo.Comment" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="blog_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="parent_comment_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="like_count" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <!--!!! 二级的列名一定要起别名！！-->
  <resultMap id="ParentResultMap" type="Comment">
    <id property="id" column="id" />
    <result property="avatar" column="avatar"/>
    <result property="content" column="content"/>
    <result property="createTime" column="create_time"/>
    <result property="nickname" column="nickname"/>
    <result property="likeCount" column="like_count"/>
    <collection property="commentList" ofType="Comment">
      <result property="avatar" column="cavatar"/>
      <result property="content" column="ccontent"/>
      <result property="createTime" column="ccreate_time"/>
      <result property="nickname" column="cnickname"/>
      <result property="likeCount" column="clike_count"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, like_count
  </sql>
  <sql id="parentwithComment_List" >
    t1.id, t1.avatar, t1.content, t1.create_time, t1.nickname, t1.like_count,
    t2.avatar as cavatar, t2.content as ccontent, t2.create_time as ccreate_time, t2.nickname as cnickname, t2.like_count as clike_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lx.leeblog.pojo.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAllComment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_comment
  </select>
  <select id="selectCommentByUserBlogId" resultMap="ParentResultMap">
     select
     /*t1.id, t1.avatar, t1.content, t1.create_time, t1.nickname, t1.like_count,
     t2.id as pid, t2.avatar, t2.content, t2.create_time, t2.nickname, t2.like_count */
     <include refid="parentwithComment_List" />
     from t_comment t1
     LEFT JOIN t_comment t2 on t1.id = t2.parent_comment_id
 	 where t1.id NOT in
 	 (select t3.id from t_comment t3 INNER JOIN t_comment t1 on t3.parent_comment_id = t1.id)
	 and t1.blog_id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.leeblog.pojo.CommentExample" >
    delete from t_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.leeblog.pojo.Comment" >
    insert into t_comment (id, avatar, content,
      create_time, email, nickname,
      blog_id, parent_comment_id, like_count
      )
    values (#{id,jdbcType=BIGINT}, #{avatar,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
      #{blogId,jdbcType=BIGINT}, #{parentCommentId,jdbcType=BIGINT}, #{likeCount,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.leeblog.pojo.Comment" >
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="parentCommentId != null" >
        parent_comment_id,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null" >
        #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.leeblog.pojo.CommentExample" resultType="java.lang.Integer" >
    select count(*) from t_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.blogId != null" >
        blog_id = #{record.blogId,jdbcType=BIGINT},
      </if>
      <if test="record.parentCommentId != null" >
        parent_comment_id = #{record.parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="record.likeCount != null" >
        like_count = #{record.likeCount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_comment
    set id = #{record.id,jdbcType=BIGINT},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      blog_id = #{record.blogId,jdbcType=BIGINT},
      parent_comment_id = #{record.parentCommentId,jdbcType=BIGINT},
      like_count = #{record.likeCount,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.leeblog.pojo.Comment" >
    update t_comment
    <set >
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null" >
        parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null" >
        like_count = #{likeCount,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.leeblog.pojo.Comment" >
    update t_comment
    set avatar = #{avatar,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      blog_id = #{blogId,jdbcType=BIGINT},
      parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
